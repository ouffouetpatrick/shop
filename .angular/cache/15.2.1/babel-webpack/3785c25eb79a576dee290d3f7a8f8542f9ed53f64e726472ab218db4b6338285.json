{"ast":null,"code":"/*\n * QRious v4.0.2\n * Copyright (C) 2017 Alasdair Mercer\n * Copyright (C) 2010 Tom Zerucha\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.QRious = factory();\n})(this, function () {\n  'use strict';\n\n  /*\n   * Copyright (C) 2017 Alasdair Mercer, !ninja\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * A bare-bones constructor for surrogate prototype swapping.\n   *\n   * @private\n   * @constructor\n   */\n  var Constructor = /* istanbul ignore next */function () {};\n  /**\n   * A reference to <code>Object.prototype.hasOwnProperty</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * A reference to <code>Array.prototype.slice</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var slice = Array.prototype.slice;\n\n  /**\n   * Creates an object which inherits the given <code>prototype</code>.\n   *\n   * Optionally, the created object can be extended further with the specified <code>properties</code>.\n   *\n   * @param {Object} prototype - the prototype to be inherited by the created object\n   * @param {Object} [properties] - the optional properties to be extended by the created object\n   * @return {Object} The newly created object.\n   * @private\n   */\n  function createObject(prototype, properties) {\n    var result;\n    /* istanbul ignore next */\n    if (typeof Object.create === 'function') {\n      result = Object.create(prototype);\n    } else {\n      Constructor.prototype = prototype;\n      result = new Constructor();\n      Constructor.prototype = null;\n    }\n    if (properties) {\n      extendObject(true, result, properties);\n    }\n    return result;\n  }\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   */\n  function extend(name, constructor, prototype, statics) {\n    var superConstructor = this;\n    if (typeof name !== 'string') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = name;\n      name = null;\n    }\n    if (typeof constructor !== 'function') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = function () {\n        return superConstructor.apply(this, arguments);\n      };\n    }\n    extendObject(false, constructor, superConstructor, statics);\n    constructor.prototype = createObject(superConstructor.prototype, prototype);\n    constructor.prototype.constructor = constructor;\n    constructor.class_ = name || superConstructor.class_;\n    constructor.super_ = superConstructor;\n    return constructor;\n  }\n\n  /**\n   * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n   *\n   * if any source is <code>null</code> it will be ignored.\n   *\n   * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n   * <code>target</code>; otherwise <code>false</code>\n   * @param {Object} target - the target object which should be extended\n   * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n   * @return {void}\n   * @private\n   */\n  function extendObject(own, target, sources) {\n    sources = slice.call(arguments, 2);\n    var property;\n    var source;\n    for (var i = 0, length = sources.length; i < length; i++) {\n      source = sources[i];\n      for (property in source) {\n        if (!own || hasOwnProperty.call(source, property)) {\n          target[property] = source[property];\n        }\n      }\n    }\n  }\n  var extend_1 = extend;\n\n  /**\n   * The base class from which all others should extend.\n   *\n   * @public\n   * @constructor\n   */\n  function Nevis() {}\n  Nevis.class_ = 'Nevis';\n  Nevis.super_ = Object;\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   * @static\n   * @memberof Nevis\n   */\n  Nevis.extend = extend_1;\n  var nevis = Nevis;\n  var lite = nevis;\n\n  /**\n   * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n   *\n   * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n   *\n   * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n   * from the renderer will result in it being immediately enabled and the element being rendered.\n   *\n   * @param {QRious} qrious - the {@link QRious} instance to be used\n   * @param {*} element - the element onto which the QR code is to be rendered\n   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Renderer = lite.extend(function (qrious, element, enabled) {\n    /**\n     * The {@link QRious} instance.\n     *\n     * @protected\n     * @type {QRious}\n     * @memberof Renderer#\n     */\n    this.qrious = qrious;\n\n    /**\n     * The element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * @protected\n     * @type {*}\n     * @memberof Renderer#\n     */\n    this.element = element;\n    this.element.qrious = qrious;\n\n    /**\n     * Whether this {@link Renderer} is enabled.\n     *\n     * @protected\n     * @type {boolean}\n     * @memberof Renderer#\n     */\n    this.enabled = Boolean(enabled);\n  }, {\n    /**\n     * Draws the specified QR code <code>frame</code> on the underlying element.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {Frame} frame - the {@link Frame} to be drawn\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    draw: function (frame) {},\n    /**\n     * Returns the element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n     * before the element is returned.\n     *\n     * @return {*} The element.\n     * @public\n     * @memberof Renderer#\n     */\n    getElement: function () {\n      if (!this.enabled) {\n        this.enabled = true;\n        this.render();\n      }\n      return this.element;\n    },\n    /**\n     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n     * <code>frame</code> provided.\n     *\n     * Any configured padding will be excluded from the returned size.\n     *\n     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n     * displayed instead of just a blank space filled by the background color.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n     * @return {number} The pixel size for each module in the QR code which will be no less than one.\n     * @protected\n     * @memberof Renderer#\n     */\n    getModuleSize: function (frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding || 0;\n      var pixels = Math.floor((qrious.size - padding * 2) / frame.width);\n      return Math.max(1, pixels);\n    },\n    /**\n     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>\n     * provided.\n     *\n     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its\n     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally\n     * and it is not clipped from all directions.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived\n     * @return {number} The pixel offset for the QR code which will be no less than zero.\n     * @protected\n     * @memberof Renderer#\n     */\n    getOffset: function (frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding;\n      if (padding != null) {\n        return padding;\n      }\n      var moduleSize = this.getModuleSize(frame);\n      var offset = Math.floor((qrious.size - moduleSize * frame.width) / 2);\n      return Math.max(0, offset);\n    },\n    /**\n     * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n     *\n     * @param {Frame} frame - the {@link Frame} to be rendered\n     * @return {void}\n     * @public\n     * @memberof Renderer#\n     */\n    render: function (frame) {\n      if (this.enabled) {\n        this.resize();\n        this.reset();\n        this.draw(frame);\n      }\n    },\n    /**\n     * Resets the underlying element, effectively clearing any previously rendered QR code.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    reset: function () {},\n    /**\n     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    resize: function () {}\n  });\n  var Renderer_1 = Renderer;\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var CanvasRenderer = Renderer_1.extend({\n    /**\n     * @override\n     */\n    draw: function (frame) {\n      var i, j;\n      var qrious = this.qrious;\n      var moduleSize = this.getModuleSize(frame);\n      var offset = this.getOffset(frame);\n      var context = this.element.getContext('2d');\n      context.fillStyle = qrious.foreground;\n      context.globalAlpha = qrious.foregroundAlpha;\n      for (i = 0; i < frame.width; i++) {\n        for (j = 0; j < frame.width; j++) {\n          if (frame.buffer[j * frame.width + i]) {\n            context.fillRect(moduleSize * i + offset, moduleSize * j + offset, moduleSize, moduleSize);\n          }\n        }\n      }\n    },\n    /**\n     * @override\n     */\n    reset: function () {\n      var qrious = this.qrious;\n      var context = this.element.getContext('2d');\n      var size = qrious.size;\n      context.lineWidth = 1;\n      context.clearRect(0, 0, size, size);\n      context.fillStyle = qrious.background;\n      context.globalAlpha = qrious.backgroundAlpha;\n      context.fillRect(0, 0, size, size);\n    },\n    /**\n     * @override\n     */\n    resize: function () {\n      var element = this.element;\n      element.width = element.height = this.qrious.size;\n    }\n  });\n  var CanvasRenderer_1 = CanvasRenderer;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n  /**\n   * Contains alignment pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Alignment = lite.extend(null, {\n    /**\n     * The alignment pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Alignment\n     */\n    BLOCK: [0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28]\n  });\n  var Alignment_1 = Alignment;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n  /**\n   * Contains error correction information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ErrorCorrection = lite.extend(null, {\n    /**\n     * The error correction blocks.\n     *\n     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n     * the ECC width.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    BLOCKS: [1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30],\n    /**\n     * The final format bits with mask (level << 3 | mask).\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    FINAL_FORMAT: [\n    // L\n    0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n    // M\n    0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n    // Q\n    0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n    // H\n    0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b],\n    /**\n     * A map of human-readable ECC levels.\n     *\n     * @public\n     * @static\n     * @type {Object.<string, number>}\n     * @memberof ErrorCorrection\n     */\n    LEVELS: {\n      L: 1,\n      M: 2,\n      Q: 3,\n      H: 4\n    }\n  });\n  var ErrorCorrection_1 = ErrorCorrection;\n\n  /**\n   * Contains Galois field information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Galois = lite.extend(null, {\n    /**\n     * The Galois field exponent table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    EXPONENT: [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26, 0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23, 0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1, 0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2, 0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce, 0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc, 0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54, 0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73, 0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff, 0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41, 0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6, 0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09, 0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16, 0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00],\n    /**\n     * The Galois field log table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    LOG: [0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b, 0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71, 0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45, 0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6, 0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88, 0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40, 0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d, 0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57, 0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18, 0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e, 0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61, 0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2, 0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6, 0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a, 0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7, 0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf]\n  });\n  var Galois_1 = Galois;\n\n  /**\n   * Contains version pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Version = lite.extend(null, {\n    /**\n     * The version pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Version\n     */\n    BLOCK: [0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69]\n  });\n  var Version_1 = Version;\n\n  /**\n   * Generates information for a QR code frame based on a specific value to be encoded.\n   *\n   * @param {Frame~Options} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Frame = lite.extend(function (options) {\n    var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n    var valueLength = options.value.length;\n    this._badness = [];\n    this._level = ErrorCorrection_1.LEVELS[options.level];\n    this._polynomial = [];\n    this._value = options.value;\n    this._version = 0;\n    this._stringBuffer = [];\n    while (this._version < 40) {\n      this._version++;\n      index = (this._level - 1) * 4 + (this._version - 1) * 16;\n      neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n      neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n      dataBlock = ErrorCorrection_1.BLOCKS[index++];\n      eccBlock = ErrorCorrection_1.BLOCKS[index];\n      index = dataBlock * (neccBlock1 + neccBlock2) + neccBlock2 - 3 + (this._version <= 9);\n      if (valueLength <= index) {\n        break;\n      }\n    }\n    this._dataBlock = dataBlock;\n    this._eccBlock = eccBlock;\n    this._neccBlock1 = neccBlock1;\n    this._neccBlock2 = neccBlock2;\n\n    /**\n     * The data width is based on version.\n     *\n     * @public\n     * @type {number}\n     * @memberof Frame#\n     */\n    // FIXME: Ensure that it fits instead of being truncated.\n    var width = this.width = 17 + 4 * this._version;\n\n    /**\n     * The image buffer.\n     *\n     * @public\n     * @type {number[]}\n     * @memberof Frame#\n     */\n    this.buffer = Frame._createArray(width * width);\n    this._ecc = Frame._createArray(dataBlock + (dataBlock + eccBlock) * (neccBlock1 + neccBlock2) + neccBlock2);\n    this._mask = Frame._createArray((width * (width + 1) + 1) / 2);\n    this._insertFinders();\n    this._insertAlignments();\n\n    // Insert single foreground cell.\n    this.buffer[8 + width * (width - 8)] = 1;\n    this._insertTimingGap();\n    this._reverseMask();\n    this._insertTimingRowAndColumn();\n    this._insertVersion();\n    this._syncMask();\n    this._convertBitStream(valueLength);\n    this._calculatePolynomial();\n    this._appendEccToData();\n    this._interleaveBlocks();\n    this._pack();\n    this._finish();\n  }, {\n    _addAlignment: function (x, y) {\n      var i;\n      var buffer = this.buffer;\n      var width = this.width;\n      buffer[x + width * y] = 1;\n      for (i = -2; i < 2; i++) {\n        buffer[x + i + width * (y - 2)] = 1;\n        buffer[x - 2 + width * (y + i + 1)] = 1;\n        buffer[x + 2 + width * (y + i)] = 1;\n        buffer[x + i + 1 + width * (y + 2)] = 1;\n      }\n      for (i = 0; i < 2; i++) {\n        this._setMask(x - 1, y + i);\n        this._setMask(x + 1, y - i);\n        this._setMask(x - i, y - 1);\n        this._setMask(x + i, y + 1);\n      }\n    },\n    _appendData: function (data, dataLength, ecc, eccLength) {\n      var bit, i, j;\n      var polynomial = this._polynomial;\n      var stringBuffer = this._stringBuffer;\n      for (i = 0; i < eccLength; i++) {\n        stringBuffer[ecc + i] = 0;\n      }\n      for (i = 0; i < dataLength; i++) {\n        bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n        if (bit !== 255) {\n          for (j = 1; j < eccLength; j++) {\n            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^ Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n          }\n        } else {\n          for (j = ecc; j < ecc + eccLength; j++) {\n            stringBuffer[j] = stringBuffer[j + 1];\n          }\n        }\n        stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n      }\n    },\n    _appendEccToData: function () {\n      var i;\n      var data = 0;\n      var dataBlock = this._dataBlock;\n      var ecc = this._calculateMaxLength();\n      var eccBlock = this._eccBlock;\n      for (i = 0; i < this._neccBlock1; i++) {\n        this._appendData(data, dataBlock, ecc, eccBlock);\n        data += dataBlock;\n        ecc += eccBlock;\n      }\n      for (i = 0; i < this._neccBlock2; i++) {\n        this._appendData(data, dataBlock + 1, ecc, eccBlock);\n        data += dataBlock + 1;\n        ecc += eccBlock;\n      }\n    },\n    _applyMask: function (mask) {\n      var r3x, r3y, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n      switch (mask) {\n        case 0:\n          for (y = 0; y < width; y++) {\n            for (x = 0; x < width; x++) {\n              if (!(x + y & 1) && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 1:\n          for (y = 0; y < width; y++) {\n            for (x = 0; x < width; x++) {\n              if (!(y & 1) && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 2:\n          for (y = 0; y < width; y++) {\n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n              if (!r3x && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n            for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n              if (!r3x && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < width; y++) {\n            for (r3x = 0, r3y = y >> 1 & 1, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n                r3y = !r3y;\n              }\n              if (!r3y && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 5:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n              if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 6:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n              if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n        case 7:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n              if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n                buffer[x + y * width] ^= 1;\n              }\n            }\n          }\n          break;\n      }\n    },\n    _calculateMaxLength: function () {\n      return this._dataBlock * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;\n    },\n    _calculatePolynomial: function () {\n      var i, j;\n      var eccBlock = this._eccBlock;\n      var polynomial = this._polynomial;\n      polynomial[0] = 1;\n      for (i = 0; i < eccBlock; i++) {\n        polynomial[i + 1] = 1;\n        for (j = i; j > 0; j--) {\n          polynomial[j] = polynomial[j] ? polynomial[j - 1] ^ Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n        }\n        polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n      }\n\n      // Use logs for generator polynomial to save calculation step.\n      for (i = 0; i <= eccBlock; i++) {\n        polynomial[i] = Galois_1.LOG[polynomial[i]];\n      }\n    },\n    _checkBadness: function () {\n      var b, b1, h, x, y;\n      var bad = 0;\n      var badness = this._badness;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Blocks of same colour.\n      for (y = 0; y < width - 1; y++) {\n        for (x = 0; x < width - 1; x++) {\n          // All foreground colour.\n          if (buffer[x + width * y] && buffer[x + 1 + width * y] && buffer[x + width * (y + 1)] && buffer[x + 1 + width * (y + 1)] ||\n          // All background colour.\n          !(buffer[x + width * y] || buffer[x + 1 + width * y] || buffer[x + width * (y + 1)] || buffer[x + 1 + width * (y + 1)])) {\n            bad += Frame.N2;\n          }\n        }\n      }\n      var bw = 0;\n\n      // X runs.\n      for (y = 0; y < width; y++) {\n        h = 0;\n        badness[0] = 0;\n        for (b = 0, x = 0; x < width; x++) {\n          b1 = buffer[x + width * y];\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n          b = b1;\n          bw += b ? 1 : -1;\n        }\n        bad += this._getBadness(h);\n      }\n      if (bw < 0) {\n        bw = -bw;\n      }\n      var count = 0;\n      var big = bw;\n      big += big << 2;\n      big <<= 1;\n      while (big > width * width) {\n        big -= width * width;\n        count++;\n      }\n      bad += count * Frame.N4;\n\n      // Y runs.\n      for (x = 0; x < width; x++) {\n        h = 0;\n        badness[0] = 0;\n        for (b = 0, y = 0; y < width; y++) {\n          b1 = buffer[x + width * y];\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n          b = b1;\n        }\n        bad += this._getBadness(h);\n      }\n      return bad;\n    },\n    _convertBitStream: function (length) {\n      var bit, i;\n      var ecc = this._ecc;\n      var version = this._version;\n\n      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n      for (i = 0; i < length; i++) {\n        ecc[i] = this._value.charCodeAt(i);\n      }\n      var stringBuffer = this._stringBuffer = ecc.slice();\n      var maxLength = this._calculateMaxLength();\n      if (length >= maxLength - 2) {\n        length = maxLength - 2;\n        if (version > 9) {\n          length--;\n        }\n      }\n\n      // Shift and re-pack to insert length prefix.\n      var index = length;\n      if (version > 9) {\n        stringBuffer[index + 2] = 0;\n        stringBuffer[index + 3] = 0;\n        while (index--) {\n          bit = stringBuffer[index];\n          stringBuffer[index + 3] |= 255 & bit << 4;\n          stringBuffer[index + 2] = bit >> 4;\n        }\n        stringBuffer[2] |= 255 & length << 4;\n        stringBuffer[1] = length >> 4;\n        stringBuffer[0] = 0x40 | length >> 12;\n      } else {\n        stringBuffer[index + 1] = 0;\n        stringBuffer[index + 2] = 0;\n        while (index--) {\n          bit = stringBuffer[index];\n          stringBuffer[index + 2] |= 255 & bit << 4;\n          stringBuffer[index + 1] = bit >> 4;\n        }\n        stringBuffer[1] |= 255 & length << 4;\n        stringBuffer[0] = 0x40 | length >> 4;\n      }\n\n      // Fill to end with pad pattern.\n      index = length + 3 - (version < 10);\n      while (index < maxLength) {\n        stringBuffer[index++] = 0xec;\n        stringBuffer[index++] = 0x11;\n      }\n    },\n    _getBadness: function (length) {\n      var i;\n      var badRuns = 0;\n      var badness = this._badness;\n      for (i = 0; i <= length; i++) {\n        if (badness[i] >= 5) {\n          badRuns += Frame.N1 + badness[i] - 5;\n        }\n      }\n\n      // FBFFFBF as in finder.\n      for (i = 3; i < length - 1; i += 2) {\n        if (badness[i - 2] === badness[i + 2] && badness[i + 2] === badness[i - 1] && badness[i - 1] === badness[i + 1] && badness[i - 1] * 3 === badness[i] && (\n        // Background around the foreground pattern? Not part of the specs.\n        badness[i - 3] === 0 || i + 3 > length || badness[i - 3] * 3 >= badness[i] * 4 || badness[i + 3] * 3 >= badness[i] * 4)) {\n          badRuns += Frame.N3;\n        }\n      }\n      return badRuns;\n    },\n    _finish: function () {\n      // Save pre-mask copy of frame.\n      this._stringBuffer = this.buffer.slice();\n      var currentMask, i;\n      var bit = 0;\n      var mask = 30000;\n\n      /*\n       * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n       * a better one since they get more complex and take longer.\n       */\n      for (i = 0; i < 8; i++) {\n        // Returns foreground-background imbalance.\n        this._applyMask(i);\n        currentMask = this._checkBadness();\n\n        // Is current mask better than previous best?\n        if (currentMask < mask) {\n          mask = currentMask;\n          bit = i;\n        }\n\n        // Don't increment \"i\" to a void redoing mask.\n        if (bit === 7) {\n          break;\n        }\n\n        // Reset for next pass.\n        this.buffer = this._stringBuffer.slice();\n      }\n\n      // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n      if (bit !== i) {\n        this._applyMask(bit);\n      }\n\n      // Add in final mask/ECC level bytes.\n      mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Low byte.\n      for (i = 0; i < 8; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[width - 1 - i + width * 8] = 1;\n          if (i < 6) {\n            buffer[8 + width * i] = 1;\n          } else {\n            buffer[8 + width * (i + 1)] = 1;\n          }\n        }\n      }\n\n      // High byte.\n      for (i = 0; i < 7; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[8 + width * (width - 7 + i)] = 1;\n          if (i) {\n            buffer[6 - i + width * 8] = 1;\n          } else {\n            buffer[7 + width * 8] = 1;\n          }\n        }\n      }\n    },\n    _interleaveBlocks: function () {\n      var i, j;\n      var dataBlock = this._dataBlock;\n      var ecc = this._ecc;\n      var eccBlock = this._eccBlock;\n      var k = 0;\n      var maxLength = this._calculateMaxLength();\n      var neccBlock1 = this._neccBlock1;\n      var neccBlock2 = this._neccBlock2;\n      var stringBuffer = this._stringBuffer;\n      for (i = 0; i < dataBlock; i++) {\n        for (j = 0; j < neccBlock1; j++) {\n          ecc[k++] = stringBuffer[i + j * dataBlock];\n        }\n        for (j = 0; j < neccBlock2; j++) {\n          ecc[k++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)];\n        }\n      }\n      for (j = 0; j < neccBlock2; j++) {\n        ecc[k++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)];\n      }\n      for (i = 0; i < eccBlock; i++) {\n        for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n          ecc[k++] = stringBuffer[maxLength + i + j * eccBlock];\n        }\n      }\n      this._stringBuffer = ecc;\n    },\n    _insertAlignments: function () {\n      var i, x, y;\n      var version = this._version;\n      var width = this.width;\n      if (version > 1) {\n        i = Alignment_1.BLOCK[version];\n        y = width - 7;\n        for (;;) {\n          x = width - 7;\n          while (x > i - 3) {\n            this._addAlignment(x, y);\n            if (x < i) {\n              break;\n            }\n            x -= i;\n          }\n          if (y <= i + 9) {\n            break;\n          }\n          y -= i;\n          this._addAlignment(6, y);\n          this._addAlignment(y, 6);\n        }\n      }\n    },\n    _insertFinders: function () {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n      for (i = 0; i < 3; i++) {\n        j = 0;\n        y = 0;\n        if (i === 1) {\n          j = width - 7;\n        }\n        if (i === 2) {\n          y = width - 7;\n        }\n        buffer[y + 3 + width * (j + 3)] = 1;\n        for (x = 0; x < 6; x++) {\n          buffer[y + x + width * j] = 1;\n          buffer[y + width * (j + x + 1)] = 1;\n          buffer[y + 6 + width * (j + x)] = 1;\n          buffer[y + x + 1 + width * (j + 6)] = 1;\n        }\n        for (x = 1; x < 5; x++) {\n          this._setMask(y + x, j + 1);\n          this._setMask(y + 1, j + x + 1);\n          this._setMask(y + 5, j + x);\n          this._setMask(y + x + 1, j + 5);\n        }\n        for (x = 2; x < 4; x++) {\n          buffer[y + x + width * (j + 2)] = 1;\n          buffer[y + 2 + width * (j + x + 1)] = 1;\n          buffer[y + 4 + width * (j + x)] = 1;\n          buffer[y + x + 1 + width * (j + 4)] = 1;\n        }\n      }\n    },\n    _insertTimingGap: function () {\n      var x, y;\n      var width = this.width;\n      for (y = 0; y < 7; y++) {\n        this._setMask(7, y);\n        this._setMask(width - 8, y);\n        this._setMask(7, y + width - 7);\n      }\n      for (x = 0; x < 8; x++) {\n        this._setMask(x, 7);\n        this._setMask(x + width - 8, 7);\n        this._setMask(x, width - 8);\n      }\n    },\n    _insertTimingRowAndColumn: function () {\n      var x;\n      var buffer = this.buffer;\n      var width = this.width;\n      for (x = 0; x < width - 14; x++) {\n        if (x & 1) {\n          this._setMask(8 + x, 6);\n          this._setMask(6, 8 + x);\n        } else {\n          buffer[8 + x + width * 6] = 1;\n          buffer[6 + width * (8 + x)] = 1;\n        }\n      }\n    },\n    _insertVersion: function () {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var version = this._version;\n      var width = this.width;\n      if (version > 6) {\n        i = Version_1.BLOCK[version - 7];\n        j = 17;\n        for (x = 0; x < 6; x++) {\n          for (y = 0; y < 3; y++, j--) {\n            if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n              buffer[5 - x + width * (2 - y + width - 11)] = 1;\n              buffer[2 - y + width - 11 + width * (5 - x)] = 1;\n            } else {\n              this._setMask(5 - x, 2 - y + width - 11);\n              this._setMask(2 - y + width - 11, 5 - x);\n            }\n          }\n        }\n      }\n    },\n    _isMasked: function (x, y) {\n      var bit = Frame._getMaskBit(x, y);\n      return this._mask[bit] === 1;\n    },\n    _pack: function () {\n      var bit, i, j;\n      var k = 1;\n      var v = 1;\n      var width = this.width;\n      var x = width - 1;\n      var y = width - 1;\n\n      // Interleaved data and ECC codes.\n      var length = (this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;\n      for (i = 0; i < length; i++) {\n        bit = this._stringBuffer[i];\n        for (j = 0; j < 8; j++, bit <<= 1) {\n          if (0x80 & bit) {\n            this.buffer[x + width * y] = 1;\n          }\n\n          // Find next fill position.\n          do {\n            if (v) {\n              x--;\n            } else {\n              x++;\n              if (k) {\n                if (y !== 0) {\n                  y--;\n                } else {\n                  x -= 2;\n                  k = !k;\n                  if (x === 6) {\n                    x--;\n                    y = 9;\n                  }\n                }\n              } else if (y !== width - 1) {\n                y++;\n              } else {\n                x -= 2;\n                k = !k;\n                if (x === 6) {\n                  x--;\n                  y -= 8;\n                }\n              }\n            }\n            v = !v;\n          } while (this._isMasked(x, y));\n        }\n      }\n    },\n    _reverseMask: function () {\n      var x, y;\n      var width = this.width;\n      for (x = 0; x < 9; x++) {\n        this._setMask(x, 8);\n      }\n      for (x = 0; x < 8; x++) {\n        this._setMask(x + width - 8, 8);\n        this._setMask(8, x);\n      }\n      for (y = 0; y < 7; y++) {\n        this._setMask(8, y + width - 7);\n      }\n    },\n    _setMask: function (x, y) {\n      var bit = Frame._getMaskBit(x, y);\n      this._mask[bit] = 1;\n    },\n    _syncMask: function () {\n      var x, y;\n      var width = this.width;\n      for (y = 0; y < width; y++) {\n        for (x = 0; x <= y; x++) {\n          if (this.buffer[x + width * y]) {\n            this._setMask(x, y);\n          }\n        }\n      }\n    }\n  }, {\n    _createArray: function (length) {\n      var i;\n      var array = [];\n      for (i = 0; i < length; i++) {\n        array[i] = 0;\n      }\n      return array;\n    },\n    _getMaskBit: function (x, y) {\n      var bit;\n      if (x > y) {\n        bit = x;\n        x = y;\n        y = bit;\n      }\n      bit = y;\n      bit += y * y;\n      bit >>= 1;\n      bit += x;\n      return bit;\n    },\n    _modN: function (x) {\n      while (x >= 255) {\n        x -= 255;\n        x = (x >> 8) + (x & 255);\n      }\n      return x;\n    },\n    // *Badness* coefficients.\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n  });\n  var Frame_1 = Frame;\n\n  /**\n   * The options used by {@link Frame}.\n   *\n   * @typedef {Object} Frame~Options\n   * @property {string} level - The ECC level to be used.\n   * @property {string} value - The value to be encoded.\n   */\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>img</code> elements.\n   *\n   * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n   * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var ImageRenderer = Renderer_1.extend({\n    /**\n     * @override\n     */\n    draw: function () {\n      this.element.src = this.qrious.toDataURL();\n    },\n    /**\n     * @override\n     */\n    reset: function () {\n      this.element.src = '';\n    },\n    /**\n     * @override\n     */\n    resize: function () {\n      var element = this.element;\n      element.width = element.height = this.qrious.size;\n    }\n  });\n  var ImageRenderer_1 = ImageRenderer;\n\n  /**\n   * Defines an available option while also configuring how values are applied to the target object.\n   *\n   * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n   * value is applied.\n   *\n   * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n   * on the target object itself as a field using the option name prefixed with a single underscore.\n   *\n   * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n   * property that is defined on the target object that uses the option name.\n   *\n   * @param {string} name - the name to be used\n   * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n   * otherwise <code>false</code>\n   * @param {*} [defaultValue] - the default value to be used\n   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Option = lite.extend(function (name, modifiable, defaultValue, valueTransformer) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     * @memberof Option#\n     */\n    this.name = name;\n\n    /**\n     * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n     *\n     * @public\n     * @type {boolean}\n     * @memberof Option#\n     */\n    this.modifiable = Boolean(modifiable);\n\n    /**\n     * The default value for this {@link Option}.\n     *\n     * @public\n     * @type {*}\n     * @memberof Option#\n     */\n    this.defaultValue = defaultValue;\n    this._valueTransformer = valueTransformer;\n  }, {\n    /**\n     * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n     *\n     * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n     * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n     *\n     * @param {*} value - the value to be transformed\n     * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n     * @public\n     * @memberof Option#\n     */\n    transform: function (value) {\n      var transformer = this._valueTransformer;\n      if (typeof transformer === 'function') {\n        return transformer(value, this);\n      }\n      return value;\n    }\n  });\n  var Option_1 = Option;\n\n  /**\n   * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n   *\n   * @callback Option~ValueTransformer\n   * @param {*} value - the value to be transformed\n   * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n   * @return {*} The transform value.\n   */\n\n  /**\n   * Contains utility methods that are useful throughout the library.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Utilities = lite.extend(null, {\n    /**\n     * Returns the absolute value of a given number.\n     *\n     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n     * <code>null</code> instead of zero.\n     *\n     * @param {number} value - the number whose absolute value is to be returned\n     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n     * <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    abs: function (value) {\n      return value != null ? Math.abs(value) : null;\n    },\n    /**\n     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n     * (not inherited) property.\n     *\n     * @param {Object} object - the object on which the property is to be checked\n     * @param {string} name - the name of the property to be checked\n     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    hasOwn: function (object, name) {\n      return Object.prototype.hasOwnProperty.call(object, name);\n    },\n    /**\n     * A non-operation method that does absolutely nothing.\n     *\n     * @return {void}\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    noop: function () {},\n    /**\n     * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n     *\n     * @param {string} string - the string to be transformed to upper case\n     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    toUpperCase: function (string) {\n      return string != null ? string.toUpperCase() : null;\n    }\n  });\n  var Utilities_1 = Utilities;\n\n  /**\n   * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n   *\n   * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n   *\n   * @param {Option[]} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var OptionManager = lite.extend(function (options) {\n    /**\n     * The available options for this {@link OptionManager}.\n     *\n     * @public\n     * @type {Object.<string, Option>}\n     * @memberof OptionManager#\n     */\n    this.options = {};\n    options.forEach(function (option) {\n      this.options[option.name] = option;\n    }, this);\n  }, {\n    /**\n     * Returns whether an option with the specified <code>name</code> is available.\n     *\n     * @param {string} name - the name of the {@link Option} whose existence is to be checked\n     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n     * <code>false</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    exists: function (name) {\n      return this.options[name] != null;\n    },\n    /**\n     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n     *\n     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    get: function (name, target) {\n      return OptionManager._get(this.options[name], target);\n    },\n    /**\n     * Returns a copy of all of the available options on the <code>target</code> object provided.\n     *\n     * @param {Object} target - the object from which the option name/value pairs are to be returned\n     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    getAll: function (target) {\n      var name;\n      var options = this.options;\n      var result = {};\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name)) {\n          result[name] = OptionManager._get(options[name], target);\n        }\n      }\n      return result;\n    },\n    /**\n     * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n     * within the speciifed <code>options</code>.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n     *\n     * This involves setting the default values and defining properties for all of the available options on\n     * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n     * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n     * property that will allow its corresponding value to be modified.\n     *\n     * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n     * modifiable option, but only when done so via the defined property's setter.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n     * @param {Object} target - the object on which the options are to be initialized\n     * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n     * <code>target</code>\n     * @return {void}\n     * @throws {Error} If <code>options</code> contains an invalid option name.\n     * @public\n     * @memberof OptionManager#\n     */\n    init: function (options, target, changeHandler) {\n      if (typeof changeHandler !== 'function') {\n        changeHandler = Utilities_1.noop;\n      }\n      var name, option;\n      for (name in this.options) {\n        if (Utilities_1.hasOwn(this.options, name)) {\n          option = this.options[name];\n          OptionManager._set(option, option.defaultValue, target);\n          OptionManager._createAccessor(option, target, changeHandler);\n        }\n      }\n      this._setAll(options, target, true);\n    },\n    /**\n     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n     * <code>value</code>.\n     *\n     * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n     * cannot be modified.\n     *\n     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n     * transform whichever value was determined to be used.\n     *\n     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n     *\n     * @param {string} name - the name of the {@link Option} whose value is to be set\n     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n     * @public\n     * @memberof OptionManager#\n     */\n    set: function (name, value, target) {\n      return this._set(name, value, target);\n    },\n    /**\n     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n     * values.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option\n     * or matches an option that cannot be modified.\n     *\n     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n     * configured, it will be used to transform whichever value was determined to be used.\n     *\n     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n     * result.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of options to be set\n     * @param {Object} target - the object on which the options are to be set\n     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n     * @public\n     * @memberof OptionManager#\n     */\n    setAll: function (options, target) {\n      return this._setAll(options, target);\n    },\n    _set: function (name, value, target, allowUnmodifiable) {\n      var option = this.options[name];\n      if (!option) {\n        throw new Error('Invalid option: ' + name);\n      }\n      if (!option.modifiable && !allowUnmodifiable) {\n        throw new Error('Option cannot be modified: ' + name);\n      }\n      return OptionManager._set(option, value, target);\n    },\n    _setAll: function (options, target, allowUnmodifiable) {\n      if (!options) {\n        return false;\n      }\n      var name;\n      var changed = false;\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n          changed = true;\n        }\n      }\n      return changed;\n    }\n  }, {\n    _createAccessor: function (option, target, changeHandler) {\n      var descriptor = {\n        get: function () {\n          return OptionManager._get(option, target);\n        }\n      };\n      if (option.modifiable) {\n        descriptor.set = function (value) {\n          if (OptionManager._set(option, value, target)) {\n            changeHandler(value, option);\n          }\n        };\n      }\n      Object.defineProperty(target, option.name, descriptor);\n    },\n    _get: function (option, target) {\n      return target['_' + option.name];\n    },\n    _set: function (option, value, target) {\n      var fieldName = '_' + option.name;\n      var oldValue = target[fieldName];\n      var newValue = option.transform(value != null ? value : option.defaultValue);\n      target[fieldName] = newValue;\n      return newValue !== oldValue;\n    }\n  });\n  var OptionManager_1 = OptionManager;\n\n  /**\n   * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n   * setter.\n   *\n   * @callback OptionManager~ChangeHandler\n   * @param {*} value - the new value for <code>option</code> on the target object\n   * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n   * @return {void}\n   */\n\n  /**\n   * A basic manager for {@link Service} implementations that are mapped to simple names.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ServiceManager = lite.extend(function () {\n    this._services = {};\n  }, {\n    /**\n     * Returns the {@link Service} being managed with the specified <code>name</code>.\n     *\n     * @param {string} name - the name of the {@link Service} to be returned\n     * @return {Service} The {@link Service} is being managed with <code>name</code>.\n     * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    getService: function (name) {\n      var service = this._services[name];\n      if (!service) {\n        throw new Error('Service is not being managed with name: ' + name);\n      }\n      return service;\n    },\n    /**\n     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n     * <code>service</code> provided.\n     *\n     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n     * @param {Service} service - the {@link Service} implementation to be managed\n     * @return {void}\n     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    setService: function (name, service) {\n      if (this._services[name]) {\n        throw new Error('Service is already managed with name: ' + name);\n      }\n      if (service) {\n        this._services[name] = service;\n      }\n    }\n  });\n  var ServiceManager_1 = ServiceManager;\n  var optionManager = new OptionManager_1([new Option_1('background', true, 'white'), new Option_1('backgroundAlpha', true, 1, Utilities_1.abs), new Option_1('element'), new Option_1('foreground', true, 'black'), new Option_1('foregroundAlpha', true, 1, Utilities_1.abs), new Option_1('level', true, 'L', Utilities_1.toUpperCase), new Option_1('mime', true, 'image/png'), new Option_1('padding', true, null, Utilities_1.abs), new Option_1('size', true, 100, Utilities_1.abs), new Option_1('value', true, '')]);\n  var serviceManager = new ServiceManager_1();\n\n  /**\n   * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n   *\n   * @param {QRious~Options} [options] - the options to be used\n   * @throws {Error} If any <code>options</code> are invalid.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var QRious = lite.extend(function (options) {\n    optionManager.init(options, this, this.update.bind(this));\n    var element = optionManager.get('element', this);\n    var elementService = serviceManager.getService('element');\n    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n    var image = element && elementService.isImage(element) ? element : elementService.createImage();\n    this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n    this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n    this.update();\n  }, {\n    /**\n     * Returns all of the options configured for this {@link QRious}.\n     *\n     * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n     * underlying fields.\n     *\n     * @return {Object.<string, *>} A copy of the applied options.\n     * @public\n     * @memberof QRious#\n     */\n    get: function () {\n      return optionManager.getAll(this);\n    },\n    /**\n     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n     * underlying fields are changed as a result.\n     *\n     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n     * changes.\n     *\n     * @param {QRious~Options} options - the options to be set\n     * @return {void}\n     * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n     * @public\n     * @memberof QRious#\n     */\n    set: function (options) {\n      if (optionManager.setAll(options, this)) {\n        this.update();\n      }\n    },\n    /**\n     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n     *\n     * @param {string} [mime] - the MIME type for the image\n     * @return {string} The image data URI for the QR code.\n     * @public\n     * @memberof QRious#\n     */\n    toDataURL: function (mime) {\n      return this.canvas.toDataURL(mime || this.mime);\n    },\n    /**\n     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n     *\n     * @return {void}\n     * @protected\n     * @memberof QRious#\n     */\n    update: function () {\n      var frame = new Frame_1({\n        level: this.level,\n        value: this.value\n      });\n      this._canvasRenderer.render(frame);\n      this._imageRenderer.render(frame);\n    }\n  }, {\n    /**\n     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n     *\n     * @param {Service} service - the {@link Service} to be configured\n     * @return {void}\n     * @throws {Error} If a {@link Service} has already been configured with the same name.\n     * @public\n     * @static\n     * @memberof QRious\n     */\n    use: function (service) {\n      serviceManager.setService(service.getName(), service);\n    }\n  });\n  Object.defineProperties(QRious.prototype, {\n    canvas: {\n      /**\n       * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>canvas</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias canvas\n       */\n      get: function () {\n        return this._canvasRenderer.getElement();\n      }\n    },\n    image: {\n      /**\n       * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>img</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias image\n       */\n      get: function () {\n        return this._imageRenderer.getElement();\n      }\n    }\n  });\n  var QRious_1$2 = QRious;\n\n  /**\n   * The options used by {@link QRious}.\n   *\n   * @typedef {Object} QRious~Options\n   * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n   * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n   * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n   * <code>img</code>. The element(s) will be created if needed.\n   * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n   * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n   * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n   * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n   * @property {number} [padding] - The padding for the QR code in pixels.\n   * @property {number} [size=100] - The size of the QR code in pixels.\n   * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n   */\n\n  var index = QRious_1$2;\n\n  /**\n   * Defines a service contract that must be met by all implementations.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Service = lite.extend({\n    /**\n     * Returns the name of this {@link Service}.\n     *\n     * @return {string} The service name.\n     * @public\n     * @abstract\n     * @memberof Service#\n     */\n    getName: function () {}\n  });\n  var Service_1 = Service;\n\n  /**\n   * A service for working with elements.\n   *\n   * @public\n   * @class\n   * @extends Service\n   */\n  var ElementService = Service_1.extend({\n    /**\n     * Creates an instance of a canvas element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created canvas element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createCanvas: function () {},\n    /**\n     * Creates an instance of a image element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created image element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createImage: function () {},\n    /**\n     * @override\n     */\n    getName: function () {\n      return 'element';\n    },\n    /**\n     * Returns whether the specified <code>element</code> is a canvas.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isCanvas: function (element) {},\n    /**\n     * Returns whether the specified <code>element</code> is an image.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isImage: function (element) {}\n  });\n  var ElementService_1 = ElementService;\n\n  /**\n   * An implementation of {@link ElementService} intended for use within a browser environment.\n   *\n   * @public\n   * @class\n   * @extends ElementService\n   */\n  var BrowserElementService = ElementService_1.extend({\n    /**\n     * @override\n     */\n    createCanvas: function () {\n      return document.createElement('canvas');\n    },\n    /**\n     * @override\n     */\n    createImage: function () {\n      return document.createElement('img');\n    },\n    /**\n     * @override\n     */\n    isCanvas: function (element) {\n      return element instanceof HTMLCanvasElement;\n    },\n    /**\n     * @override\n     */\n    isImage: function (element) {\n      return element instanceof HTMLImageElement;\n    }\n  });\n  var BrowserElementService_1 = BrowserElementService;\n  index.use(new BrowserElementService_1());\n  var QRious_1 = index;\n  return QRious_1;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","QRious","Constructor","hasOwnProperty","Object","prototype","slice","Array","createObject","properties","result","create","extendObject","extend","name","constructor","statics","superConstructor","apply","arguments","class_","super_","own","target","sources","call","property","source","i","length","extend_1","Nevis","nevis","lite","Renderer","qrious","element","enabled","Boolean","draw","frame","getElement","render","getModuleSize","padding","pixels","Math","floor","size","width","max","getOffset","moduleSize","offset","resize","reset","Renderer_1","CanvasRenderer","j","context","getContext","fillStyle","foreground","globalAlpha","foregroundAlpha","buffer","fillRect","lineWidth","clearRect","background","backgroundAlpha","height","CanvasRenderer_1","Alignment","BLOCK","Alignment_1","ErrorCorrection","BLOCKS","FINAL_FORMAT","LEVELS","L","M","Q","H","ErrorCorrection_1","Galois","EXPONENT","LOG","Galois_1","Version","Version_1","Frame","options","dataBlock","eccBlock","index","neccBlock1","neccBlock2","valueLength","value","_badness","_level","level","_polynomial","_value","_version","_stringBuffer","_dataBlock","_eccBlock","_neccBlock1","_neccBlock2","_createArray","_ecc","_mask","_insertFinders","_insertAlignments","_insertTimingGap","_reverseMask","_insertTimingRowAndColumn","_insertVersion","_syncMask","_convertBitStream","_calculatePolynomial","_appendEccToData","_interleaveBlocks","_pack","_finish","_addAlignment","x","y","_setMask","_appendData","data","dataLength","ecc","eccLength","bit","polynomial","stringBuffer","_modN","_calculateMaxLength","_applyMask","mask","r3x","r3y","_isMasked","_checkBadness","b","b1","h","bad","badness","N2","bw","_getBadness","count","big","N4","version","charCodeAt","maxLength","badRuns","N1","N3","currentMask","k","_getMaskBit","v","array","Frame_1","ImageRenderer","src","toDataURL","ImageRenderer_1","Option","modifiable","defaultValue","valueTransformer","_valueTransformer","transform","transformer","Option_1","Utilities","abs","hasOwn","object","noop","toUpperCase","string","Utilities_1","OptionManager","forEach","option","exists","get","_get","getAll","init","changeHandler","_set","_createAccessor","_setAll","set","setAll","allowUnmodifiable","Error","changed","descriptor","defineProperty","fieldName","oldValue","newValue","OptionManager_1","ServiceManager","_services","getService","service","setService","ServiceManager_1","optionManager","serviceManager","update","bind","elementService","canvas","isCanvas","createCanvas","image","isImage","createImage","_canvasRenderer","_imageRenderer","mime","use","getName","defineProperties","QRious_1$2","Service","Service_1","ElementService","ElementService_1","BrowserElementService","document","createElement","HTMLCanvasElement","HTMLImageElement","BrowserElementService_1","QRious_1"],"sources":["D:/10KCODEURS/FORMATION OBJIS/ANGULAR/tuto-shop/node_modules/qrious/dist/qrious.js"],"sourcesContent":["/*\n * QRious v4.0.2\n * Copyright (C) 2017 Alasdair Mercer\n * Copyright (C) 2010 Tom Zerucha\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.QRious = factory());\n}(this, (function () { 'use strict';\n\n  /*\n   * Copyright (C) 2017 Alasdair Mercer, !ninja\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * A bare-bones constructor for surrogate prototype swapping.\n   *\n   * @private\n   * @constructor\n   */\n  var Constructor = /* istanbul ignore next */ function() {};\n  /**\n   * A reference to <code>Object.prototype.hasOwnProperty</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * A reference to <code>Array.prototype.slice</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var slice = Array.prototype.slice;\n\n  /**\n   * Creates an object which inherits the given <code>prototype</code>.\n   *\n   * Optionally, the created object can be extended further with the specified <code>properties</code>.\n   *\n   * @param {Object} prototype - the prototype to be inherited by the created object\n   * @param {Object} [properties] - the optional properties to be extended by the created object\n   * @return {Object} The newly created object.\n   * @private\n   */\n  function createObject(prototype, properties) {\n    var result;\n    /* istanbul ignore next */\n    if (typeof Object.create === 'function') {\n      result = Object.create(prototype);\n    } else {\n      Constructor.prototype = prototype;\n      result = new Constructor();\n      Constructor.prototype = null;\n    }\n\n    if (properties) {\n      extendObject(true, result, properties);\n    }\n\n    return result;\n  }\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   */\n  function extend(name, constructor, prototype, statics) {\n    var superConstructor = this;\n\n    if (typeof name !== 'string') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = name;\n      name = null;\n    }\n\n    if (typeof constructor !== 'function') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = function() {\n        return superConstructor.apply(this, arguments);\n      };\n    }\n\n    extendObject(false, constructor, superConstructor, statics);\n\n    constructor.prototype = createObject(superConstructor.prototype, prototype);\n    constructor.prototype.constructor = constructor;\n\n    constructor.class_ = name || superConstructor.class_;\n    constructor.super_ = superConstructor;\n\n    return constructor;\n  }\n\n  /**\n   * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n   *\n   * if any source is <code>null</code> it will be ignored.\n   *\n   * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n   * <code>target</code>; otherwise <code>false</code>\n   * @param {Object} target - the target object which should be extended\n   * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n   * @return {void}\n   * @private\n   */\n  function extendObject(own, target, sources) {\n    sources = slice.call(arguments, 2);\n\n    var property;\n    var source;\n\n    for (var i = 0, length = sources.length; i < length; i++) {\n      source = sources[i];\n\n      for (property in source) {\n        if (!own || hasOwnProperty.call(source, property)) {\n          target[property] = source[property];\n        }\n      }\n    }\n  }\n\n  var extend_1 = extend;\n\n  /**\n   * The base class from which all others should extend.\n   *\n   * @public\n   * @constructor\n   */\n  function Nevis() {}\n  Nevis.class_ = 'Nevis';\n  Nevis.super_ = Object;\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   * @static\n   * @memberof Nevis\n   */\n  Nevis.extend = extend_1;\n\n  var nevis = Nevis;\n\n  var lite = nevis;\n\n  /**\n   * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n   *\n   * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n   *\n   * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n   * from the renderer will result in it being immediately enabled and the element being rendered.\n   *\n   * @param {QRious} qrious - the {@link QRious} instance to be used\n   * @param {*} element - the element onto which the QR code is to be rendered\n   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Renderer = lite.extend(function(qrious, element, enabled) {\n    /**\n     * The {@link QRious} instance.\n     *\n     * @protected\n     * @type {QRious}\n     * @memberof Renderer#\n     */\n    this.qrious = qrious;\n\n    /**\n     * The element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * @protected\n     * @type {*}\n     * @memberof Renderer#\n     */\n    this.element = element;\n    this.element.qrious = qrious;\n\n    /**\n     * Whether this {@link Renderer} is enabled.\n     *\n     * @protected\n     * @type {boolean}\n     * @memberof Renderer#\n     */\n    this.enabled = Boolean(enabled);\n  }, {\n\n    /**\n     * Draws the specified QR code <code>frame</code> on the underlying element.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {Frame} frame - the {@link Frame} to be drawn\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    draw: function(frame) {},\n\n    /**\n     * Returns the element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n     * before the element is returned.\n     *\n     * @return {*} The element.\n     * @public\n     * @memberof Renderer#\n     */\n    getElement: function() {\n      if (!this.enabled) {\n        this.enabled = true;\n        this.render();\n      }\n\n      return this.element;\n    },\n\n    /**\n     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n     * <code>frame</code> provided.\n     *\n     * Any configured padding will be excluded from the returned size.\n     *\n     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n     * displayed instead of just a blank space filled by the background color.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n     * @return {number} The pixel size for each module in the QR code which will be no less than one.\n     * @protected\n     * @memberof Renderer#\n     */\n    getModuleSize: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding || 0;\n      var pixels = Math.floor((qrious.size - (padding * 2)) / frame.width);\n\n      return Math.max(1, pixels);\n    },\n\n    /**\n     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>\n     * provided.\n     *\n     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its\n     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally\n     * and it is not clipped from all directions.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived\n     * @return {number} The pixel offset for the QR code which will be no less than zero.\n     * @protected\n     * @memberof Renderer#\n     */\n    getOffset: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding;\n\n      if (padding != null) {\n        return padding;\n      }\n\n      var moduleSize = this.getModuleSize(frame);\n      var offset = Math.floor((qrious.size - (moduleSize * frame.width)) / 2);\n\n      return Math.max(0, offset);\n    },\n\n    /**\n     * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n     *\n     * @param {Frame} frame - the {@link Frame} to be rendered\n     * @return {void}\n     * @public\n     * @memberof Renderer#\n     */\n    render: function(frame) {\n      if (this.enabled) {\n        this.resize();\n        this.reset();\n        this.draw(frame);\n      }\n    },\n\n    /**\n     * Resets the underlying element, effectively clearing any previously rendered QR code.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    reset: function() {},\n\n    /**\n     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    resize: function() {}\n\n  });\n\n  var Renderer_1 = Renderer;\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var CanvasRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function(frame) {\n      var i, j;\n      var qrious = this.qrious;\n      var moduleSize = this.getModuleSize(frame);\n      var offset = this.getOffset(frame);\n      var context = this.element.getContext('2d');\n\n      context.fillStyle = qrious.foreground;\n      context.globalAlpha = qrious.foregroundAlpha;\n\n      for (i = 0; i < frame.width; i++) {\n        for (j = 0; j < frame.width; j++) {\n          if (frame.buffer[(j * frame.width) + i]) {\n            context.fillRect((moduleSize * i) + offset, (moduleSize * j) + offset, moduleSize, moduleSize);\n          }\n        }\n      }\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      var qrious = this.qrious;\n      var context = this.element.getContext('2d');\n      var size = qrious.size;\n\n      context.lineWidth = 1;\n      context.clearRect(0, 0, size, size);\n      context.fillStyle = qrious.background;\n      context.globalAlpha = qrious.backgroundAlpha;\n      context.fillRect(0, 0, size, size);\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var CanvasRenderer_1 = CanvasRenderer;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains alignment pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Alignment = lite.extend(null, {\n\n    /**\n     * The alignment pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Alignment\n     */\n    BLOCK: [\n      0,  11, 15, 19, 23, 27, 31,\n      16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\n      26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\n    ]\n\n  });\n\n  var Alignment_1 = Alignment;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains error correction information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ErrorCorrection = lite.extend(null, {\n\n    /**\n     * The error correction blocks.\n     *\n     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n     * the ECC width.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    BLOCKS: [\n      1,  0,  19,  7,     1,  0,  16,  10,    1,  0,  13,  13,    1,  0,  9,   17,\n      1,  0,  34,  10,    1,  0,  28,  16,    1,  0,  22,  22,    1,  0,  16,  28,\n      1,  0,  55,  15,    1,  0,  44,  26,    2,  0,  17,  18,    2,  0,  13,  22,\n      1,  0,  80,  20,    2,  0,  32,  18,    2,  0,  24,  26,    4,  0,  9,   16,\n      1,  0,  108, 26,    2,  0,  43,  24,    2,  2,  15,  18,    2,  2,  11,  22,\n      2,  0,  68,  18,    4,  0,  27,  16,    4,  0,  19,  24,    4,  0,  15,  28,\n      2,  0,  78,  20,    4,  0,  31,  18,    2,  4,  14,  18,    4,  1,  13,  26,\n      2,  0,  97,  24,    2,  2,  38,  22,    4,  2,  18,  22,    4,  2,  14,  26,\n      2,  0,  116, 30,    3,  2,  36,  22,    4,  4,  16,  20,    4,  4,  12,  24,\n      2,  2,  68,  18,    4,  1,  43,  26,    6,  2,  19,  24,    6,  2,  15,  28,\n      4,  0,  81,  20,    1,  4,  50,  30,    4,  4,  22,  28,    3,  8,  12,  24,\n      2,  2,  92,  24,    6,  2,  36,  22,    4,  6,  20,  26,    7,  4,  14,  28,\n      4,  0,  107, 26,    8,  1,  37,  22,    8,  4,  20,  24,    12, 4,  11,  22,\n      3,  1,  115, 30,    4,  5,  40,  24,    11, 5,  16,  20,    11, 5,  12,  24,\n      5,  1,  87,  22,    5,  5,  41,  24,    5,  7,  24,  30,    11, 7,  12,  24,\n      5,  1,  98,  24,    7,  3,  45,  28,    15, 2,  19,  24,    3,  13, 15,  30,\n      1,  5,  107, 28,    10, 1,  46,  28,    1,  15, 22,  28,    2,  17, 14,  28,\n      5,  1,  120, 30,    9,  4,  43,  26,    17, 1,  22,  28,    2,  19, 14,  28,\n      3,  4,  113, 28,    3,  11, 44,  26,    17, 4,  21,  26,    9,  16, 13,  26,\n      3,  5,  107, 28,    3,  13, 41,  26,    15, 5,  24,  30,    15, 10, 15,  28,\n      4,  4,  116, 28,    17, 0,  42,  26,    17, 6,  22,  28,    19, 6,  16,  30,\n      2,  7,  111, 28,    17, 0,  46,  28,    7,  16, 24,  30,    34, 0,  13,  24,\n      4,  5,  121, 30,    4,  14, 47,  28,    11, 14, 24,  30,    16, 14, 15,  30,\n      6,  4,  117, 30,    6,  14, 45,  28,    11, 16, 24,  30,    30, 2,  16,  30,\n      8,  4,  106, 26,    8,  13, 47,  28,    7,  22, 24,  30,    22, 13, 15,  30,\n      10, 2,  114, 28,    19, 4,  46,  28,    28, 6,  22,  28,    33, 4,  16,  30,\n      8,  4,  122, 30,    22, 3,  45,  28,    8,  26, 23,  30,    12, 28, 15,  30,\n      3,  10, 117, 30,    3,  23, 45,  28,    4,  31, 24,  30,    11, 31, 15,  30,\n      7,  7,  116, 30,    21, 7,  45,  28,    1,  37, 23,  30,    19, 26, 15,  30,\n      5,  10, 115, 30,    19, 10, 47,  28,    15, 25, 24,  30,    23, 25, 15,  30,\n      13, 3,  115, 30,    2,  29, 46,  28,    42, 1,  24,  30,    23, 28, 15,  30,\n      17, 0,  115, 30,    10, 23, 46,  28,    10, 35, 24,  30,    19, 35, 15,  30,\n      17, 1,  115, 30,    14, 21, 46,  28,    29, 19, 24,  30,    11, 46, 15,  30,\n      13, 6,  115, 30,    14, 23, 46,  28,    44, 7,  24,  30,    59, 1,  16,  30,\n      12, 7,  121, 30,    12, 26, 47,  28,    39, 14, 24,  30,    22, 41, 15,  30,\n      6,  14, 121, 30,    6,  34, 47,  28,    46, 10, 24,  30,    2,  64, 15,  30,\n      17, 4,  122, 30,    29, 14, 46,  28,    49, 10, 24,  30,    24, 46, 15,  30,\n      4,  18, 122, 30,    13, 32, 46,  28,    48, 14, 24,  30,    42, 32, 15,  30,\n      20, 4,  117, 30,    40, 7,  47,  28,    43, 22, 24,  30,    10, 67, 15,  30,\n      19, 6,  118, 30,    18, 31, 47,  28,    34, 34, 24,  30,    20, 61, 15,  30\n    ],\n\n    /**\n     * The final format bits with mask (level << 3 | mask).\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    FINAL_FORMAT: [\n      // L\n      0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n      // M\n      0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n      // Q\n      0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n      // H\n      0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b\n    ],\n\n    /**\n     * A map of human-readable ECC levels.\n     *\n     * @public\n     * @static\n     * @type {Object.<string, number>}\n     * @memberof ErrorCorrection\n     */\n    LEVELS: {\n      L: 1,\n      M: 2,\n      Q: 3,\n      H: 4\n    }\n\n  });\n\n  var ErrorCorrection_1 = ErrorCorrection;\n\n  /**\n   * Contains Galois field information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Galois = lite.extend(null, {\n\n    /**\n     * The Galois field exponent table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    EXPONENT: [\n      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\n      0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\n      0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\n      0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\n      0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\n      0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\n      0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\n      0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\n      0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\n      0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\n      0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\n      0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\n      0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\n      0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\n      0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\n      0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\n    ],\n\n    /**\n     * The Galois field log table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    LOG: [\n      0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\n      0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\n      0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\n      0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\n      0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\n      0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\n      0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\n      0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\n      0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\n      0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\n      0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\n      0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\n      0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\n      0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\n      0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\n      0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\n    ]\n\n  });\n\n  var Galois_1 = Galois;\n\n  /**\n   * Contains version pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Version = lite.extend(null, {\n\n    /**\n     * The version pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Version\n     */\n    BLOCK: [\n      0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532,\n      0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5,\n      0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69\n    ]\n\n  });\n\n  var Version_1 = Version;\n\n  /**\n   * Generates information for a QR code frame based on a specific value to be encoded.\n   *\n   * @param {Frame~Options} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Frame = lite.extend(function(options) {\n    var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n    var valueLength = options.value.length;\n\n    this._badness = [];\n    this._level = ErrorCorrection_1.LEVELS[options.level];\n    this._polynomial = [];\n    this._value = options.value;\n    this._version = 0;\n    this._stringBuffer = [];\n\n    while (this._version < 40) {\n      this._version++;\n\n      index = ((this._level - 1) * 4) + ((this._version - 1) * 16);\n\n      neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n      neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n      dataBlock = ErrorCorrection_1.BLOCKS[index++];\n      eccBlock = ErrorCorrection_1.BLOCKS[index];\n\n      index = (dataBlock * (neccBlock1 + neccBlock2)) + neccBlock2 - 3 + (this._version <= 9);\n\n      if (valueLength <= index) {\n        break;\n      }\n    }\n\n    this._dataBlock = dataBlock;\n    this._eccBlock = eccBlock;\n    this._neccBlock1 = neccBlock1;\n    this._neccBlock2 = neccBlock2;\n\n    /**\n     * The data width is based on version.\n     *\n     * @public\n     * @type {number}\n     * @memberof Frame#\n     */\n    // FIXME: Ensure that it fits instead of being truncated.\n    var width = this.width = 17 + (4 * this._version);\n\n    /**\n     * The image buffer.\n     *\n     * @public\n     * @type {number[]}\n     * @memberof Frame#\n     */\n    this.buffer = Frame._createArray(width * width);\n\n    this._ecc = Frame._createArray(dataBlock + ((dataBlock + eccBlock) * (neccBlock1 + neccBlock2)) + neccBlock2);\n    this._mask = Frame._createArray(((width * (width + 1)) + 1) / 2);\n\n    this._insertFinders();\n    this._insertAlignments();\n\n    // Insert single foreground cell.\n    this.buffer[8 + (width * (width - 8))] = 1;\n\n    this._insertTimingGap();\n    this._reverseMask();\n    this._insertTimingRowAndColumn();\n    this._insertVersion();\n    this._syncMask();\n    this._convertBitStream(valueLength);\n    this._calculatePolynomial();\n    this._appendEccToData();\n    this._interleaveBlocks();\n    this._pack();\n    this._finish();\n  }, {\n\n    _addAlignment: function(x, y) {\n      var i;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      buffer[x + (width * y)] = 1;\n\n      for (i = -2; i < 2; i++) {\n        buffer[x + i + (width * (y - 2))] = 1;\n        buffer[x - 2 + (width * (y + i + 1))] = 1;\n        buffer[x + 2 + (width * (y + i))] = 1;\n        buffer[x + i + 1 + (width * (y + 2))] = 1;\n      }\n\n      for (i = 0; i < 2; i++) {\n        this._setMask(x - 1, y + i);\n        this._setMask(x + 1, y - i);\n        this._setMask(x - i, y - 1);\n        this._setMask(x + i, y + 1);\n      }\n    },\n\n    _appendData: function(data, dataLength, ecc, eccLength) {\n      var bit, i, j;\n      var polynomial = this._polynomial;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < eccLength; i++) {\n        stringBuffer[ecc + i] = 0;\n      }\n\n      for (i = 0; i < dataLength; i++) {\n        bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n\n        if (bit !== 255) {\n          for (j = 1; j < eccLength; j++) {\n            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^\n              Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n          }\n        } else {\n          for (j = ecc; j < ecc + eccLength; j++) {\n            stringBuffer[j] = stringBuffer[j + 1];\n          }\n        }\n\n        stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n      }\n    },\n\n    _appendEccToData: function() {\n      var i;\n      var data = 0;\n      var dataBlock = this._dataBlock;\n      var ecc = this._calculateMaxLength();\n      var eccBlock = this._eccBlock;\n\n      for (i = 0; i < this._neccBlock1; i++) {\n        this._appendData(data, dataBlock, ecc, eccBlock);\n\n        data += dataBlock;\n        ecc += eccBlock;\n      }\n\n      for (i = 0; i < this._neccBlock2; i++) {\n        this._appendData(data, dataBlock + 1, ecc, eccBlock);\n\n        data += dataBlock + 1;\n        ecc += eccBlock;\n      }\n    },\n\n    _applyMask: function(mask) {\n      var r3x, r3y, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      switch (mask) {\n      case 0:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!((x + y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 1:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!(y & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 2:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 3:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 4:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, r3y = (y >> 1) & 1, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n              r3y = !r3y;\n            }\n\n            if (!r3y && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 5:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 6:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 7:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      }\n    },\n\n    _calculateMaxLength: function() {\n      return (this._dataBlock * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n    },\n\n    _calculatePolynomial: function() {\n      var i, j;\n      var eccBlock = this._eccBlock;\n      var polynomial = this._polynomial;\n\n      polynomial[0] = 1;\n\n      for (i = 0; i < eccBlock; i++) {\n        polynomial[i + 1] = 1;\n\n        for (j = i; j > 0; j--) {\n          polynomial[j] = polynomial[j] ? polynomial[j - 1] ^\n            Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n        }\n\n        polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n      }\n\n      // Use logs for generator polynomial to save calculation step.\n      for (i = 0; i <= eccBlock; i++) {\n        polynomial[i] = Galois_1.LOG[polynomial[i]];\n      }\n    },\n\n    _checkBadness: function() {\n      var b, b1, h, x, y;\n      var bad = 0;\n      var badness = this._badness;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Blocks of same colour.\n      for (y = 0; y < width - 1; y++) {\n        for (x = 0; x < width - 1; x++) {\n          // All foreground colour.\n          if ((buffer[x + (width * y)] &&\n            buffer[x + 1 + (width * y)] &&\n            buffer[x + (width * (y + 1))] &&\n            buffer[x + 1 + (width * (y + 1))]) ||\n            // All background colour.\n            !(buffer[x + (width * y)] ||\n            buffer[x + 1 + (width * y)] ||\n            buffer[x + (width * (y + 1))] ||\n            buffer[x + 1 + (width * (y + 1))])) {\n            bad += Frame.N2;\n          }\n        }\n      }\n\n      var bw = 0;\n\n      // X runs.\n      for (y = 0; y < width; y++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, x = 0; x < width; x++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n          bw += b ? 1 : -1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      if (bw < 0) {\n        bw = -bw;\n      }\n\n      var count = 0;\n      var big = bw;\n      big += big << 2;\n      big <<= 1;\n\n      while (big > width * width) {\n        big -= width * width;\n        count++;\n      }\n\n      bad += count * Frame.N4;\n\n      // Y runs.\n      for (x = 0; x < width; x++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, y = 0; y < width; y++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      return bad;\n    },\n\n    _convertBitStream: function(length) {\n      var bit, i;\n      var ecc = this._ecc;\n      var version = this._version;\n\n      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n      for (i = 0; i < length; i++) {\n        ecc[i] = this._value.charCodeAt(i);\n      }\n\n      var stringBuffer = this._stringBuffer = ecc.slice();\n      var maxLength = this._calculateMaxLength();\n\n      if (length >= maxLength - 2) {\n        length = maxLength - 2;\n\n        if (version > 9) {\n          length--;\n        }\n      }\n\n      // Shift and re-pack to insert length prefix.\n      var index = length;\n\n      if (version > 9) {\n        stringBuffer[index + 2] = 0;\n        stringBuffer[index + 3] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 3] |= 255 & (bit << 4);\n          stringBuffer[index + 2] = bit >> 4;\n        }\n\n        stringBuffer[2] |= 255 & (length << 4);\n        stringBuffer[1] = length >> 4;\n        stringBuffer[0] = 0x40 | (length >> 12);\n      } else {\n        stringBuffer[index + 1] = 0;\n        stringBuffer[index + 2] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 2] |= 255 & (bit << 4);\n          stringBuffer[index + 1] = bit >> 4;\n        }\n\n        stringBuffer[1] |= 255 & (length << 4);\n        stringBuffer[0] = 0x40 | (length >> 4);\n      }\n\n      // Fill to end with pad pattern.\n      index = length + 3 - (version < 10);\n\n      while (index < maxLength) {\n        stringBuffer[index++] = 0xec;\n        stringBuffer[index++] = 0x11;\n      }\n    },\n\n    _getBadness: function(length) {\n      var i;\n      var badRuns = 0;\n      var badness = this._badness;\n\n      for (i = 0; i <= length; i++) {\n        if (badness[i] >= 5) {\n          badRuns += Frame.N1 + badness[i] - 5;\n        }\n      }\n\n      // FBFFFBF as in finder.\n      for (i = 3; i < length - 1; i += 2) {\n        if (badness[i - 2] === badness[i + 2] &&\n          badness[i + 2] === badness[i - 1] &&\n          badness[i - 1] === badness[i + 1] &&\n          badness[i - 1] * 3 === badness[i] &&\n          // Background around the foreground pattern? Not part of the specs.\n          (badness[i - 3] === 0 || i + 3 > length ||\n          badness[i - 3] * 3 >= badness[i] * 4 ||\n          badness[i + 3] * 3 >= badness[i] * 4)) {\n          badRuns += Frame.N3;\n        }\n      }\n\n      return badRuns;\n    },\n\n    _finish: function() {\n      // Save pre-mask copy of frame.\n      this._stringBuffer = this.buffer.slice();\n\n      var currentMask, i;\n      var bit = 0;\n      var mask = 30000;\n\n      /*\n       * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n       * a better one since they get more complex and take longer.\n       */\n      for (i = 0; i < 8; i++) {\n        // Returns foreground-background imbalance.\n        this._applyMask(i);\n\n        currentMask = this._checkBadness();\n\n        // Is current mask better than previous best?\n        if (currentMask < mask) {\n          mask = currentMask;\n          bit = i;\n        }\n\n        // Don't increment \"i\" to a void redoing mask.\n        if (bit === 7) {\n          break;\n        }\n\n        // Reset for next pass.\n        this.buffer = this._stringBuffer.slice();\n      }\n\n      // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n      if (bit !== i) {\n        this._applyMask(bit);\n      }\n\n      // Add in final mask/ECC level bytes.\n      mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Low byte.\n      for (i = 0; i < 8; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[width - 1 - i + (width * 8)] = 1;\n\n          if (i < 6) {\n            buffer[8 + (width * i)] = 1;\n          } else {\n            buffer[8 + (width * (i + 1))] = 1;\n          }\n        }\n      }\n\n      // High byte.\n      for (i = 0; i < 7; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[8 + (width * (width - 7 + i))] = 1;\n\n          if (i) {\n            buffer[6 - i + (width * 8)] = 1;\n          } else {\n            buffer[7 + (width * 8)] = 1;\n          }\n        }\n      }\n    },\n\n    _interleaveBlocks: function() {\n      var i, j;\n      var dataBlock = this._dataBlock;\n      var ecc = this._ecc;\n      var eccBlock = this._eccBlock;\n      var k = 0;\n      var maxLength = this._calculateMaxLength();\n      var neccBlock1 = this._neccBlock1;\n      var neccBlock2 = this._neccBlock2;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < dataBlock; i++) {\n        for (j = 0; j < neccBlock1; j++) {\n          ecc[k++] = stringBuffer[i + (j * dataBlock)];\n        }\n\n        for (j = 0; j < neccBlock2; j++) {\n          ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n        }\n      }\n\n      for (j = 0; j < neccBlock2; j++) {\n        ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n      }\n\n      for (i = 0; i < eccBlock; i++) {\n        for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n          ecc[k++] = stringBuffer[maxLength + i + (j * eccBlock)];\n        }\n      }\n\n      this._stringBuffer = ecc;\n    },\n\n    _insertAlignments: function() {\n      var i, x, y;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 1) {\n        i = Alignment_1.BLOCK[version];\n        y = width - 7;\n\n        for (;;) {\n          x = width - 7;\n\n          while (x > i - 3) {\n            this._addAlignment(x, y);\n\n            if (x < i) {\n              break;\n            }\n\n            x -= i;\n          }\n\n          if (y <= i + 9) {\n            break;\n          }\n\n          y -= i;\n\n          this._addAlignment(6, y);\n          this._addAlignment(y, 6);\n        }\n      }\n    },\n\n    _insertFinders: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (i = 0; i < 3; i++) {\n        j = 0;\n        y = 0;\n\n        if (i === 1) {\n          j = width - 7;\n        }\n        if (i === 2) {\n          y = width - 7;\n        }\n\n        buffer[y + 3 + (width * (j + 3))] = 1;\n\n        for (x = 0; x < 6; x++) {\n          buffer[y + x + (width * j)] = 1;\n          buffer[y + (width * (j + x + 1))] = 1;\n          buffer[y + 6 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 6))] = 1;\n        }\n\n        for (x = 1; x < 5; x++) {\n          this._setMask(y + x, j + 1);\n          this._setMask(y + 1, j + x + 1);\n          this._setMask(y + 5, j + x);\n          this._setMask(y + x + 1, j + 5);\n        }\n\n        for (x = 2; x < 4; x++) {\n          buffer[y + x + (width * (j + 2))] = 1;\n          buffer[y + 2 + (width * (j + x + 1))] = 1;\n          buffer[y + 4 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 4))] = 1;\n        }\n      }\n    },\n\n    _insertTimingGap: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(7, y);\n        this._setMask(width - 8, y);\n        this._setMask(7, y + width - 7);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x, 7);\n        this._setMask(x + width - 8, 7);\n        this._setMask(x, width - 8);\n      }\n    },\n\n    _insertTimingRowAndColumn: function() {\n      var x;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (x = 0; x < width - 14; x++) {\n        if (x & 1) {\n          this._setMask(8 + x, 6);\n          this._setMask(6, 8 + x);\n        } else {\n          buffer[8 + x + (width * 6)] = 1;\n          buffer[6 + (width * (8 + x))] = 1;\n        }\n      }\n    },\n\n    _insertVersion: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 6) {\n        i = Version_1.BLOCK[version - 7];\n        j = 17;\n\n        for (x = 0; x < 6; x++) {\n          for (y = 0; y < 3; y++, j--) {\n            if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n              buffer[5 - x + (width * (2 - y + width - 11))] = 1;\n              buffer[2 - y + width - 11 + (width * (5 - x))] = 1;\n            } else {\n              this._setMask(5 - x, 2 - y + width - 11);\n              this._setMask(2 - y + width - 11, 5 - x);\n            }\n          }\n        }\n      }\n    },\n\n    _isMasked: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      return this._mask[bit] === 1;\n    },\n\n    _pack: function() {\n      var bit, i, j;\n      var k = 1;\n      var v = 1;\n      var width = this.width;\n      var x = width - 1;\n      var y = width - 1;\n\n      // Interleaved data and ECC codes.\n      var length = ((this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n\n      for (i = 0; i < length; i++) {\n        bit = this._stringBuffer[i];\n\n        for (j = 0; j < 8; j++, bit <<= 1) {\n          if (0x80 & bit) {\n            this.buffer[x + (width * y)] = 1;\n          }\n\n          // Find next fill position.\n          do {\n            if (v) {\n              x--;\n            } else {\n              x++;\n\n              if (k) {\n                if (y !== 0) {\n                  y--;\n                } else {\n                  x -= 2;\n                  k = !k;\n\n                  if (x === 6) {\n                    x--;\n                    y = 9;\n                  }\n                }\n              } else if (y !== width - 1) {\n                y++;\n              } else {\n                x -= 2;\n                k = !k;\n\n                if (x === 6) {\n                  x--;\n                  y -= 8;\n                }\n              }\n            }\n\n            v = !v;\n          } while (this._isMasked(x, y));\n        }\n      }\n    },\n\n    _reverseMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (x = 0; x < 9; x++) {\n        this._setMask(x, 8);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x + width - 8, 8);\n        this._setMask(8, x);\n      }\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(8, y + width - 7);\n      }\n    },\n\n    _setMask: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      this._mask[bit] = 1;\n    },\n\n    _syncMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < width; y++) {\n        for (x = 0; x <= y; x++) {\n          if (this.buffer[x + (width * y)]) {\n            this._setMask(x, y);\n          }\n        }\n      }\n    }\n\n  }, {\n\n    _createArray: function(length) {\n      var i;\n      var array = [];\n\n      for (i = 0; i < length; i++) {\n        array[i] = 0;\n      }\n\n      return array;\n    },\n\n    _getMaskBit: function(x, y) {\n      var bit;\n\n      if (x > y) {\n        bit = x;\n        x = y;\n        y = bit;\n      }\n\n      bit = y;\n      bit += y * y;\n      bit >>= 1;\n      bit += x;\n\n      return bit;\n    },\n\n    _modN: function(x) {\n      while (x >= 255) {\n        x -= 255;\n        x = (x >> 8) + (x & 255);\n      }\n\n      return x;\n    },\n\n    // *Badness* coefficients.\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n\n  });\n\n  var Frame_1 = Frame;\n\n  /**\n   * The options used by {@link Frame}.\n   *\n   * @typedef {Object} Frame~Options\n   * @property {string} level - The ECC level to be used.\n   * @property {string} value - The value to be encoded.\n   */\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>img</code> elements.\n   *\n   * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n   * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var ImageRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function() {\n      this.element.src = this.qrious.toDataURL();\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      this.element.src = '';\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var ImageRenderer_1 = ImageRenderer;\n\n  /**\n   * Defines an available option while also configuring how values are applied to the target object.\n   *\n   * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n   * value is applied.\n   *\n   * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n   * on the target object itself as a field using the option name prefixed with a single underscore.\n   *\n   * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n   * property that is defined on the target object that uses the option name.\n   *\n   * @param {string} name - the name to be used\n   * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n   * otherwise <code>false</code>\n   * @param {*} [defaultValue] - the default value to be used\n   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Option = lite.extend(function(name, modifiable, defaultValue, valueTransformer) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     * @memberof Option#\n     */\n    this.name = name;\n\n    /**\n     * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n     *\n     * @public\n     * @type {boolean}\n     * @memberof Option#\n     */\n    this.modifiable = Boolean(modifiable);\n\n    /**\n     * The default value for this {@link Option}.\n     *\n     * @public\n     * @type {*}\n     * @memberof Option#\n     */\n    this.defaultValue = defaultValue;\n\n    this._valueTransformer = valueTransformer;\n  }, {\n\n    /**\n     * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n     *\n     * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n     * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n     *\n     * @param {*} value - the value to be transformed\n     * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n     * @public\n     * @memberof Option#\n     */\n    transform: function(value) {\n      var transformer = this._valueTransformer;\n      if (typeof transformer === 'function') {\n        return transformer(value, this);\n      }\n\n      return value;\n    }\n\n  });\n\n  var Option_1 = Option;\n\n  /**\n   * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n   *\n   * @callback Option~ValueTransformer\n   * @param {*} value - the value to be transformed\n   * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n   * @return {*} The transform value.\n   */\n\n  /**\n   * Contains utility methods that are useful throughout the library.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Utilities = lite.extend(null, {\n\n    /**\n     * Returns the absolute value of a given number.\n     *\n     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n     * <code>null</code> instead of zero.\n     *\n     * @param {number} value - the number whose absolute value is to be returned\n     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n     * <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    abs: function(value) {\n      return value != null ? Math.abs(value) : null;\n    },\n\n    /**\n     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n     * (not inherited) property.\n     *\n     * @param {Object} object - the object on which the property is to be checked\n     * @param {string} name - the name of the property to be checked\n     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    hasOwn: function(object, name) {\n      return Object.prototype.hasOwnProperty.call(object, name);\n    },\n\n    /**\n     * A non-operation method that does absolutely nothing.\n     *\n     * @return {void}\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    noop: function() {},\n\n    /**\n     * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n     *\n     * @param {string} string - the string to be transformed to upper case\n     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    toUpperCase: function(string) {\n      return string != null ? string.toUpperCase() : null;\n    }\n\n  });\n\n  var Utilities_1 = Utilities;\n\n  /**\n   * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n   *\n   * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n   *\n   * @param {Option[]} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var OptionManager = lite.extend(function(options) {\n    /**\n     * The available options for this {@link OptionManager}.\n     *\n     * @public\n     * @type {Object.<string, Option>}\n     * @memberof OptionManager#\n     */\n    this.options = {};\n\n    options.forEach(function(option) {\n      this.options[option.name] = option;\n    }, this);\n  }, {\n\n    /**\n     * Returns whether an option with the specified <code>name</code> is available.\n     *\n     * @param {string} name - the name of the {@link Option} whose existence is to be checked\n     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n     * <code>false</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    exists: function(name) {\n      return this.options[name] != null;\n    },\n\n    /**\n     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n     *\n     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    get: function(name, target) {\n      return OptionManager._get(this.options[name], target);\n    },\n\n    /**\n     * Returns a copy of all of the available options on the <code>target</code> object provided.\n     *\n     * @param {Object} target - the object from which the option name/value pairs are to be returned\n     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    getAll: function(target) {\n      var name;\n      var options = this.options;\n      var result = {};\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name)) {\n          result[name] = OptionManager._get(options[name], target);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n     * within the speciifed <code>options</code>.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n     *\n     * This involves setting the default values and defining properties for all of the available options on\n     * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n     * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n     * property that will allow its corresponding value to be modified.\n     *\n     * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n     * modifiable option, but only when done so via the defined property's setter.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n     * @param {Object} target - the object on which the options are to be initialized\n     * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n     * <code>target</code>\n     * @return {void}\n     * @throws {Error} If <code>options</code> contains an invalid option name.\n     * @public\n     * @memberof OptionManager#\n     */\n    init: function(options, target, changeHandler) {\n      if (typeof changeHandler !== 'function') {\n        changeHandler = Utilities_1.noop;\n      }\n\n      var name, option;\n\n      for (name in this.options) {\n        if (Utilities_1.hasOwn(this.options, name)) {\n          option = this.options[name];\n\n          OptionManager._set(option, option.defaultValue, target);\n          OptionManager._createAccessor(option, target, changeHandler);\n        }\n      }\n\n      this._setAll(options, target, true);\n    },\n\n    /**\n     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n     * <code>value</code>.\n     *\n     * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n     * cannot be modified.\n     *\n     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n     * transform whichever value was determined to be used.\n     *\n     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n     *\n     * @param {string} name - the name of the {@link Option} whose value is to be set\n     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n     * @public\n     * @memberof OptionManager#\n     */\n    set: function(name, value, target) {\n      return this._set(name, value, target);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n     * values.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option\n     * or matches an option that cannot be modified.\n     *\n     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n     * configured, it will be used to transform whichever value was determined to be used.\n     *\n     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n     * result.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of options to be set\n     * @param {Object} target - the object on which the options are to be set\n     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n     * @public\n     * @memberof OptionManager#\n     */\n    setAll: function(options, target) {\n      return this._setAll(options, target);\n    },\n\n    _set: function(name, value, target, allowUnmodifiable) {\n      var option = this.options[name];\n      if (!option) {\n        throw new Error('Invalid option: ' + name);\n      }\n      if (!option.modifiable && !allowUnmodifiable) {\n        throw new Error('Option cannot be modified: ' + name);\n      }\n\n      return OptionManager._set(option, value, target);\n    },\n\n    _setAll: function(options, target, allowUnmodifiable) {\n      if (!options) {\n        return false;\n      }\n\n      var name;\n      var changed = false;\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n          changed = true;\n        }\n      }\n\n      return changed;\n    }\n\n  }, {\n\n    _createAccessor: function(option, target, changeHandler) {\n      var descriptor = {\n        get: function() {\n          return OptionManager._get(option, target);\n        }\n      };\n\n      if (option.modifiable) {\n        descriptor.set = function(value) {\n          if (OptionManager._set(option, value, target)) {\n            changeHandler(value, option);\n          }\n        };\n      }\n\n      Object.defineProperty(target, option.name, descriptor);\n    },\n\n    _get: function(option, target) {\n      return target['_' + option.name];\n    },\n\n    _set: function(option, value, target) {\n      var fieldName = '_' + option.name;\n      var oldValue = target[fieldName];\n      var newValue = option.transform(value != null ? value : option.defaultValue);\n\n      target[fieldName] = newValue;\n\n      return newValue !== oldValue;\n    }\n\n  });\n\n  var OptionManager_1 = OptionManager;\n\n  /**\n   * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n   * setter.\n   *\n   * @callback OptionManager~ChangeHandler\n   * @param {*} value - the new value for <code>option</code> on the target object\n   * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n   * @return {void}\n   */\n\n  /**\n   * A basic manager for {@link Service} implementations that are mapped to simple names.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ServiceManager = lite.extend(function() {\n    this._services = {};\n  }, {\n\n    /**\n     * Returns the {@link Service} being managed with the specified <code>name</code>.\n     *\n     * @param {string} name - the name of the {@link Service} to be returned\n     * @return {Service} The {@link Service} is being managed with <code>name</code>.\n     * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    getService: function(name) {\n      var service = this._services[name];\n      if (!service) {\n        throw new Error('Service is not being managed with name: ' + name);\n      }\n\n      return service;\n    },\n\n    /**\n     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n     * <code>service</code> provided.\n     *\n     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n     * @param {Service} service - the {@link Service} implementation to be managed\n     * @return {void}\n     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    setService: function(name, service) {\n      if (this._services[name]) {\n        throw new Error('Service is already managed with name: ' + name);\n      }\n\n      if (service) {\n        this._services[name] = service;\n      }\n    }\n\n  });\n\n  var ServiceManager_1 = ServiceManager;\n\n  var optionManager = new OptionManager_1([\n    new Option_1('background', true, 'white'),\n    new Option_1('backgroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('element'),\n    new Option_1('foreground', true, 'black'),\n    new Option_1('foregroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('level', true, 'L', Utilities_1.toUpperCase),\n    new Option_1('mime', true, 'image/png'),\n    new Option_1('padding', true, null, Utilities_1.abs),\n    new Option_1('size', true, 100, Utilities_1.abs),\n    new Option_1('value', true, '')\n  ]);\n  var serviceManager = new ServiceManager_1();\n\n  /**\n   * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n   *\n   * @param {QRious~Options} [options] - the options to be used\n   * @throws {Error} If any <code>options</code> are invalid.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var QRious = lite.extend(function(options) {\n    optionManager.init(options, this, this.update.bind(this));\n\n    var element = optionManager.get('element', this);\n    var elementService = serviceManager.getService('element');\n    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n    var image = element && elementService.isImage(element) ? element : elementService.createImage();\n\n    this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n    this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n\n    this.update();\n  }, {\n\n    /**\n     * Returns all of the options configured for this {@link QRious}.\n     *\n     * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n     * underlying fields.\n     *\n     * @return {Object.<string, *>} A copy of the applied options.\n     * @public\n     * @memberof QRious#\n     */\n    get: function() {\n      return optionManager.getAll(this);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n     * underlying fields are changed as a result.\n     *\n     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n     * changes.\n     *\n     * @param {QRious~Options} options - the options to be set\n     * @return {void}\n     * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n     * @public\n     * @memberof QRious#\n     */\n    set: function(options) {\n      if (optionManager.setAll(options, this)) {\n        this.update();\n      }\n    },\n\n    /**\n     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n     *\n     * @param {string} [mime] - the MIME type for the image\n     * @return {string} The image data URI for the QR code.\n     * @public\n     * @memberof QRious#\n     */\n    toDataURL: function(mime) {\n      return this.canvas.toDataURL(mime || this.mime);\n    },\n\n    /**\n     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n     *\n     * @return {void}\n     * @protected\n     * @memberof QRious#\n     */\n    update: function() {\n      var frame = new Frame_1({\n        level: this.level,\n        value: this.value\n      });\n\n      this._canvasRenderer.render(frame);\n      this._imageRenderer.render(frame);\n    }\n\n  }, {\n\n    /**\n     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n     *\n     * @param {Service} service - the {@link Service} to be configured\n     * @return {void}\n     * @throws {Error} If a {@link Service} has already been configured with the same name.\n     * @public\n     * @static\n     * @memberof QRious\n     */\n    use: function(service) {\n      serviceManager.setService(service.getName(), service);\n    }\n\n  });\n\n  Object.defineProperties(QRious.prototype, {\n\n    canvas: {\n      /**\n       * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>canvas</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias canvas\n       */\n      get: function() {\n        return this._canvasRenderer.getElement();\n      }\n    },\n\n    image: {\n      /**\n       * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>img</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias image\n       */\n      get: function() {\n        return this._imageRenderer.getElement();\n      }\n    }\n\n  });\n\n  var QRious_1$2 = QRious;\n\n  /**\n   * The options used by {@link QRious}.\n   *\n   * @typedef {Object} QRious~Options\n   * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n   * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n   * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n   * <code>img</code>. The element(s) will be created if needed.\n   * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n   * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n   * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n   * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n   * @property {number} [padding] - The padding for the QR code in pixels.\n   * @property {number} [size=100] - The size of the QR code in pixels.\n   * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n   */\n\n  var index = QRious_1$2;\n\n  /**\n   * Defines a service contract that must be met by all implementations.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Service = lite.extend({\n\n    /**\n     * Returns the name of this {@link Service}.\n     *\n     * @return {string} The service name.\n     * @public\n     * @abstract\n     * @memberof Service#\n     */\n    getName: function() {}\n\n  });\n\n  var Service_1 = Service;\n\n  /**\n   * A service for working with elements.\n   *\n   * @public\n   * @class\n   * @extends Service\n   */\n  var ElementService = Service_1.extend({\n\n    /**\n     * Creates an instance of a canvas element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created canvas element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createCanvas: function() {},\n\n    /**\n     * Creates an instance of a image element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created image element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createImage: function() {},\n\n    /**\n     * @override\n     */\n    getName: function() {\n      return 'element';\n    },\n\n    /**\n     * Returns whether the specified <code>element</code> is a canvas.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isCanvas: function(element) {},\n\n    /**\n     * Returns whether the specified <code>element</code> is an image.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isImage: function(element) {}\n\n  });\n\n  var ElementService_1 = ElementService;\n\n  /**\n   * An implementation of {@link ElementService} intended for use within a browser environment.\n   *\n   * @public\n   * @class\n   * @extends ElementService\n   */\n  var BrowserElementService = ElementService_1.extend({\n\n    /**\n     * @override\n     */\n    createCanvas: function() {\n      return document.createElement('canvas');\n    },\n\n    /**\n     * @override\n     */\n    createImage: function() {\n      return document.createElement('img');\n    },\n\n    /**\n     * @override\n     */\n    isCanvas: function(element) {\n      return element instanceof HTMLCanvasElement;\n    },\n\n    /**\n     * @override\n     */\n    isImage: function(element) {\n      return element instanceof HTMLImageElement;\n    }\n\n  });\n\n  var BrowserElementService_1 = BrowserElementService;\n\n  index.use(new BrowserElementService_1());\n\n  var QRious_1 = index;\n\n  return QRious_1;\n\n})));\n\n"],"mappings":"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AAQ,CAAC,EAAE;UACjDH,MAAM,CAACG,QAAQ,CAAC,GAAGC,MAAM,CAACD,QAAQ,CAAC;QACrC;MACF;IACF;EACF;EAEA,IAAII,QAAQ,GAAGjB,MAAM;;EAErB;AACF;AACA;AACA;AACA;AACA;EACE,SAASkB,KAAK,GAAG,CAAC;EAClBA,KAAK,CAACX,MAAM,GAAG,OAAO;EACtBW,KAAK,CAACV,MAAM,GAAGjB,MAAM;;EAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE2B,KAAK,CAAClB,MAAM,GAAGiB,QAAQ;EAEvB,IAAIE,KAAK,GAAGD,KAAK;EAEjB,IAAIE,IAAI,GAAGD,KAAK;;EAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIE,QAAQ,GAAGD,IAAI,CAACpB,MAAM,CAAC,UAASsB,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAE;IAC5D;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACF,MAAM,GAAGA,MAAM;;IAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACA,OAAO,CAACD,MAAM,GAAGA,MAAM;;IAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACE,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC;EACjC,CAAC,EAAE;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIE,IAAI,EAAE,UAASC,KAAK,EAAE,CAAC,CAAC;IAExB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,UAAU,EAAE,YAAW;MACrB,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,GAAG,IAAI;QACnB,IAAI,CAACK,MAAM,EAAE;MACf;MAEA,OAAO,IAAI,CAACN,OAAO;IACrB,CA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CAAC,EAAM,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,CAC5E;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,YAAY,EAAE;IACZ;IACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9D;IACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9D;IACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9D;IACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAC/D;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,MAAM,EAAE;MACNC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL;EAEF,CAAC,CAAC;EAEF,IAAIC,iBAAiB,GAAGR,eAAe;;EAEvC;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAIS,MAAM,GAAGpD,IAAI,CAACpB,MAAM,CAAC,IAAI,EAAE;IAE7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIyE,QAAQ,EAAE,CACR,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAC/F;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,GAAG,EAAE,CACH,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,E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"},"metadata":{},"sourceType":"script","externalDependencies":[]}